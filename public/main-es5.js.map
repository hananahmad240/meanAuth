{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/service/auth.service.ts","webpack:///src/app/service/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","AppModule","forRoot","declarations","imports","providers","bootstrap","DashboardComponent","HomeComponent","LoginComponent","authService","router","user","username","password","console","log","loginUser","subscribe","data","success","StoreUserData","token","navigate","onLoginSubmit","NavbarComponent","logout","onLogout","ProfileComponent","getProfile","profile","RegisterComponent","validateService","name","email","ValidateRegister","ValideEmail","registerUser","onRegisterSubmit","httpOptions","headers","AuthService","http","post","localStorage","setItem","authToken","JSON","stringify","clear","auth_token","getItem","httpOptions1","Authorization","get","providedIn","ValidateService","undefined","re","test","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,YAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,gC;AAAA;AAAA;ACPzB;;AACA;;AACE;;AAEF;;;;;;;;;sEDGaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAmBA,QAAMC,SAAS,GAAW,CACxB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADwB,EAExB;AAAED,UAAI,EAAE,UAAR;AAAoBC,eAAS,EAAE;AAA/B,KAFwB,EAGxB;AAAED,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KAHwB,EAIxB;AAAED,UAAI,EAAE,WAAR;AAAqBC,eAAS,EAAE;AAAhC,KAJwB,EAKxB;AAAED,UAAI,EAAE,SAAR;AAAmBC,eAAS,EAAE;AAA9B,KALwB,CAA1B;;QA2BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,yEAAD,EAAkB,kEAAlB,C;AAA8B,gBANhC,CACP,uEADO,EAEP,2DAFO,EAGP,sEAHO,EAIP,8DAAaC,OAAb,CAAqBJ,SAArB,CAJO,CAMgC;;;;0HAG9BG,S,EAAS;AAAA,uBAjBlB,2DAiBkB,EAhBlB,gFAgBkB,EAflB,yFAekB,EAdlB,sFAckB,EAblB,mFAakB,EAZlB,6EAYkB,EAXlB,4FAWkB;AAXA,kBAGlB,uEAHkB,EAIlB,2DAJkB,EAKlB,sEALkB,EAKF,6DALE;AAWA,O;AANF,K;;;;;sEAMPA,S,EAAS;cAnBrB,sDAmBqB;eAnBZ;AACRE,sBAAY,EAAE,CACZ,2DADY,EAEZ,gFAFY,EAGZ,yFAHY,EAIZ,sFAJY,EAKZ,mFALY,EAMZ,6EANY,EAOZ,4FAPY,CADN;AAURC,iBAAO,EAAE,CACP,uEADO,EAEP,2DAFO,EAGP,sEAHO,EAIP,8DAAaF,OAAb,CAAqBJ,SAArB,CAJO,CAVD;AAgBRO,mBAAS,EAAE,CAAC,yEAAD,EAAkB,kEAAlB,CAhBH;AAiBRC,mBAAS,EAAE,CAAC,2DAAD;AAjBH,S;AAmBY,Q;;;;;;;;;;;;;;;;;;AC9CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,kB;AAEX,oCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,oC;AAAA,c;AAAA,a;AAAA;AAAA;ACP/B;;AAAG;;AAAgB;;;;;;;;sEDONA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTZ,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;AEP/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;QAOaW,a;AAEX,+BAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,mM;AAAA;AAAA;ACP1B;;AACE;;AAAI;;AAAuB;;AAC3B;;AAAgB;;AACL;;AACX;;AACE;;AAA8D;;AAAQ;;AACtE;;AAA6D;;AAAK;;AACpE;;AACF;;AAGA;;AACE;;AACE;;AAAI;;AAAe;;AACnB;;AAAG;;AAAwE;;AAC7E;;AAEA;;AACE;;AAAI;;AAAW;;AACf;;AAAG;;AAAwE;;AAC7E;;AAEA;;AACE;;AAAI;;AAAS;;AACb;;AAAG;;AAAwE;;AAC7E;;AACF;;;;AArBO;;AAAA;;AACA;;AAAA;;;;;;;;;sEDCMA,a,EAAa;cALzB,uDAKyB;eALf;AACTb,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaY,c;AAIX,8BAAmBC,WAAnB,EAAoDC,MAApD,EAAoE;AAAA;;AAAjD,aAAAD,WAAA,GAAAA,WAAA;AAAiC,aAAAC,MAAA,GAAAA,MAAA;AAAkB;;;;mCAE9D,CAAW;;;wCACH;AAAA;;AACd,cAAMC,IAAI,GAAG;AACXC,oBAAQ,EAAE,KAAKA,QADJ;AAEXC,oBAAQ,EAAE,KAAKA;AAFJ,WAAb;AAIAC,iBAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,eAAKF,WAAL,CAAiBO,SAAjB,CAA2BL,IAA3B,EAAiCM,SAAjC,CAA2C,UAACC,IAAD,EAAU;AACnD,gBAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,mBAAI,CAACV,WAAL,CAAiBW,aAAjB,CAA+BF,IAAI,CAACG,KAApC,EAA2CH,IAAI,CAACA,IAAhD,EADgB,CAEhB;AACA;;;AAEA,mBAAI,CAACR,MAAL,CAAYY,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD,aAND,MAMO;AACL,mBAAI,CAACZ,MAAL,CAAYY,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;AACF,WAVD;AAWD;;;;;;;uBAzBUd,c,EAAc,kI,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,0V;AAAA;AAAA;ACT3B;;AAAsB;;AAAK;;AAC3B;;AAAM;AAAA,mBAAU,IAAAe,aAAA,EAAV;AAAyB,WAAzB;;AACJ;;AACE;;AAAsB;;AAAQ;;AAC9B;;AAAmC;AAAA;AAAA;;AAAnC;;AACF;;AAGA;;AACE;;AAAsB;;AAAQ;;AAC9B;;AAAuC;AAAA;AAAA;;AAAvC;;AACF;;AAEA;;AAAwD;;AAAM;;AAChE;;;;AAVuC;;AAAA;;AAMI;;AAAA;;;;;;;;;sEDD9Bf,c,EAAc;cAL1B,uDAK0B;eALhB;AACTd,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;QASa4B,e;AACX,+BAAmBf,WAAnB,EAAoDC,MAApD,EAAoE;AAAA;;AAAjD,aAAAD,WAAA,GAAAA,WAAA;AAAiC,aAAAC,MAAA,GAAAA,MAAA;AAAkB;;;;mCAE9D,CAAW;;;mCAER;AACT,eAAKD,WAAL,CAAiBgB,MAAjB;AACA,eAAKf,MAAL,CAAYY,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;;;;;;uBARUE,e,EAAe,kI,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,c;AAAA,skB;AAAA;AAAA;ACT5B;;AACE;;AACE;;AAAiC;;AAAa;;AAE9C;;AACE;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAyE;;AAAI;;AAC/E;;AACF;;AAEA;;AACE;;AACE;;AAA8E;;AAAK;;AACrF;;AAEA;;AACE;;AAAkF;;AAAQ;;AAC5F;;AAEA;;AACE;;AAAoD;AAAA,mBAAS,IAAAE,QAAA,EAAT;AAAmB,WAAnB;;AAA8C;;AAAM;;AAC1G;;AAEA;;AACE;;AACiD;AAAA,mBAAS,IAAAA,QAAA,EAAT;AAAmB,WAAnB;;AAA8C;;AAAS;;AAC1G;;AAEA;;AACE;;AAC6B;AAAA,mBAAS,IAAAA,QAAA,EAAT;AAAmB,WAAnB;;AAA8C;;AAAO;;AACpF;;AACF;;AACF;;AACF;;AACF;;;;AA7Ba;;AAAA,+JAA+B,YAA/B,EAA+B,sEAA/B;;AAMA;;AAAA,+JAA+B,YAA/B,EAA+B,sEAA/B;;AAIA;;AAAA,+JAA+B,YAA/B,EAA+B,sEAA/B;;AAIA;;AAAA;;AAIA;;AAAA,+JAA+B,YAA/B,EAA+B,sEAA/B;;AAKA;;AAAA,+JAA+B,YAA/B,EAA+B,sEAA/B;;;;;;;;;sEDzBAF,e,EAAe;cAL3B,uDAK2B;eALjB;AACT9B,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACE;;AAAsB;;AAAa;;AACnC;;AAAgB;;AAAc;;AAChC;;;;;;AAFwB;;AAAA;;AACN;;AAAA;;;;QDOL+B,gB;AAEX,gCAAmBlB,WAAnB,EAAoDC,MAApD,EAAoE;AAAA;;AAAjD,aAAAD,WAAA,GAAAA,WAAA;AAAiC,aAAAC,MAAA,GAAAA,MAAA;AADpD,aAAAC,IAAA,GAAY,EAAZ;AACsE;;;;mCAE3D;AAAA;;AACT,eAAKF,WAAL,CAAiBmB,UAAjB,GAA8BX,SAA9B,CAAwC,UAACY,OAAD,EAAa;AACnD,gBAAIA,OAAO,CAACV,OAAZ,EAAqB;AACnB,oBAAI,CAACR,IAAL,GAAYkB,OAAO,CAACX,IAApB;AACD,aAFD,MAEO;AACL,oBAAI,CAACR,MAAL,CAAYY,QAAZ,CAAqB,CAAC,QAAD,CAArB;;AACAR,qBAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,WAPD;AAQD;;;;;;;uBAbUY,gB,EAAgB,kI,EAAA,uH;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA,0D;AAAA;AAAA;ACT7B;;;;AAAK;;;;;;;;;sEDSQA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTjC,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQakC,iB;AAMX,iCACSC,eADT,EAEStB,WAFT,EAGSC,MAHT,EAGuB;AAAA;;AAFd,aAAAqB,eAAA,GAAAA,eAAA;AACA,aAAAtB,WAAA,GAAAA,WAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACL;;;;mCAEI,CAAW;;;2CACA;AAAA;;AACjB,cAAMC,IAAI,GAAG;AACXqB,gBAAI,EAAE,KAAKA,IADA;AAEXpB,oBAAQ,EAAE,KAAKA,QAFJ;AAGXqB,iBAAK,EAAE,KAAKA,KAHD;AAIXpB,oBAAQ,EAAE,KAAKA;AAJJ,WAAb;;AAOA,cAAI,CAAC,KAAKkB,eAAL,CAAqBG,gBAArB,CAAsCvB,IAAtC,CAAL,EAAkD;AAChDG,mBAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,WAFD,MAEO;AACL,gBAAI,CAAC,KAAKgB,eAAL,CAAqBI,WAArB,CAAiC,KAAKF,KAAtC,CAAL,EAAmD;AACjDnB,qBAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,aAFD,MAEO;AACL,mBAAKN,WAAL,CAAiB2B,YAAjB,CAA8BzB,IAA9B,EAAoCM,SAApC,CAA8C,UAACC,IAAD,EAAU;AACtD,oBAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,wBAAI,CAACT,MAAL,CAAYY,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,iBAFD,MAEO;AACL,wBAAI,CAACZ,MAAL,CAAYY,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;AACF,eAND;AAOD;AACF;AACF;;;;;;;uBApCUQ,iB,EAAiB,0I,EAAA,kI,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,uiB;AAAA;AAAA;ACV9B;;AAAsB;;AAAQ;;AAE9B;;AAAM;AAAA,mBAAU,IAAAO,gBAAA,EAAV;AAA4B,WAA5B;;AACJ;;AACE;;AAAkB;;AAAI;;AACtB;;AAA+B;AAAA;AAAA;;AAA/B;;AACF;;AAEA;;AACE;;AAAsB;;AAAQ;;AAC9B;;AAGE;AAAA;AAAA;;AAHF;;AAMF;;AAEA;;AACE;;AAAmB;;AAAK;;AACxB;;AAAiC;AAAA;AAAA;;AAAjC;;AACF;;AAEA;;AACE;;AAAsB;;AAAQ;;AAC9B;;AAGE;AAAA;AAAA;;AAHF;;AAMF;;AACA;;AAAwD;;AAAM;;AAChE;;;;AA5BmC;;AAAA;;AAQ7B;;AAAA;;AAO+B;;AAAA;;AAQ/B;;AAAA;;;;;;;;;sEDlBOP,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTpC,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAM0C,WAAW,GAAG;AAClBC,aAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,wBAAgB;AADO,OAAhB;AADS,KAApB;;QASaC,W;AAIX,2BAAmBC,IAAnB,EAAqC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;qCAE1B9B,I,EAAI;AACf,iBAAO,KAAK8B,IAAL,CAAUC,IAAV,CACL,sCADK,EAEL/B,IAFK,EAGL2B,WAHK,CAAP;AAKD;;;kCAES3B,I,EAAI;AACZ,iBAAO,KAAK8B,IAAL,CAAUC,IAAV,CACL,mCADK,EAEL/B,IAFK,EAGL2B,WAHK,CAAP;AAKD;;;sCAEajB,K,EAAOV,I,EAAM;AACzBgC,sBAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BvB,KAA9B;AACA,eAAKwB,SAAL,GAAiBxB,KAAjB;AACAsB,sBAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BE,IAAI,CAACC,SAAL,CAAepC,IAAf,CAA7B;AACA,eAAKA,IAAL,GAAYA,IAAZ;AACD;;;iCAEQ;AACP,eAAKkC,SAAL,GAAiB,IAAjB;AACA,eAAKlC,IAAL,GAAY,IAAZ;AACAgC,sBAAY,CAACK,KAAb;AACD;;;qCAES;AACR,cAAIC,UAAU,GAAGN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAjB;AACA,cAAMC,YAAY,GAAG;AACnBZ,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,8BAAgB,kBADO;AAEvBa,2BAAa,EAAEH;AAFQ,aAAhB;AADU,WAArB;AAOA,iBAAO,KAAKR,IAAL,CAAUY,GAAV,CACL,qCADK,EAELF,YAFK,CAAP;AAID;;;;;;;uBAhDUX,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVc,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACjBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,e;AACX,iCAAc;AAAA;AAAE;;;;yCAEC5C,I,EAAM;AACrB,cACEA,IAAI,CAACqB,IAAL,IAAawB,SAAb,IACA7C,IAAI,CAACC,QAAL,IAAiB4C,SADjB,IAEA7C,IAAI,CAACsB,KAAL,IAAcuB,SAFd,IAGA7C,IAAI,CAACE,QAAL,IAAiB2C,SAJnB,EAKE;AACA,mBAAO,KAAP;AACD,WAPD,MAOO;AACL,mBAAO,IAAP;AACD;AACF;;;oCAEWvB,K,EAAO;AACjB,cAAMwB,EAAE,GAAG,wHAAX;AACA,iBAAOA,EAAE,CAACC,IAAH,CAAQzB,KAAR,CAAP;AACD;;;;;;;uBAnBUsB,e;AAAe,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVD,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;ACL5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMK,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIhD,OAAO,CAACiD,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularSrc';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\nimport { ValidateService } from './service/validate.service';\nimport { AuthService } from './service/auth.service';\n\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'profile', component: ProfileComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    NavbarComponent,\n    HomeComponent,\n    DashboardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n  ],\n  providers: [ValidateService, AuthService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n  <h1>MEAN Authentication App</h1>\n  <p class=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Provident totam, aliquid dolorem nisi hic\n    nesciunt!</p>\n  <div>\n    <a [routerLink]=\"[ '/register']\" class=\"btn btn-primary mr-2\">Register</a>\n    <a [routerLink]=\"[ '/login']\" class=\"btn btn-secondary ml-2\">Login</a>\n  </div>\n</div>\n\n\n<div class=\"row\">\n  <div class=\"col-md-4\">\n    <h3>Express Backend</h3>\n    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, nesciunt?</p>\n  </div>\n\n  <div class=\"col-md-4\">\n    <h3>Angular cli</h3>\n    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, nesciunt?</p>\n  </div>\n\n  <div class=\"col-md-4\">\n    <h3>JWT Token</h3>\n    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga, nesciunt?</p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../service/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  public username: String;\n  public password: String;\n\n  constructor(public authService: AuthService, public router: Router) {}\n\n  ngOnInit(): void {}\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password,\n    };\n    console.log(user);\n\n    this.authService.loginUser(user).subscribe((data) => {\n      if (data.success) {\n        this.authService.StoreUserData(data.token, data.data);\n        // console.log(data.token);\n        // console.log(data.data);\n\n        this.router.navigate(['/dashboard']);\n      } else {\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n}\n","<h2 class=\"display-4\">LOGIN</h2>\n<form (submit)=\"onLoginSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" name=\"username\" [(ngModel)]=\"username\" class=\"form-control\">\n  </div>\n\n\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" class=\"form-control\">\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-success btn-block\">SUBMIT</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../service/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  constructor(public authService: AuthService, public router: Router) {}\n\n  ngOnInit(): void {}\n\n  onLogout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","<nav class=\"navbar navbar-dark bg-dark navbar-expand-sm mb-5\">\n  <div class=\"container\">\n    <a href=\"#\" class=\"navbar-barnd\">MEAN Auth App</a>\n\n    <button class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbar\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbar\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n          <a [routerLinkActive]=\"['active']\" [routerLink]=\"['/']\" class=\"nav-link\">HOME</a>\n        </li>\n      </ul>\n\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\">\n          <a [routerLinkActive]=\"['active']\" [routerLink]=\"['/login']\" class=\"nav-link\">LOGIN</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a [routerLinkActive]=\"['active']\" [routerLink]=\"[ '/register']\" class=\"nav-link\">REGISTER</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a [routerLinkActive]=\"['active']\" class=\"nav-link\" (click)=\"onLogout()\" style=\"cursor: pointer;\">LOGOUT</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a [routerLinkActive]=\"['active']\"\n           [routerLink]=\"[ '/dashboard']\" class=\"nav-link\" (click)=\"onLogout()\" style=\"cursor: pointer;\">DASHBOARD</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a [routerLinkActive]=\"['active']\" class=\"nav-link\" \n           [routerLink]=\"[ '/profile']\"(click)=\"onLogout()\" style=\"cursor: pointer;\">PROFILE</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../service/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n})\nexport class ProfileComponent implements OnInit {\n  user: any = {};\n  constructor(public authService: AuthService, public router: Router) {}\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe((profile) => {\n      if (profile.success) {\n        this.user = profile.data;\n      } else {\n        this.router.navigate(['/login']);\n        console.log('error');\n      }\n    });\n  }\n}\n","<div *ngIf=\"user\">\n  <h1 class=\"display-4\">{{user.name}}</h1>\n  <p class=\"lead\">{{user.email}}</p>\n</div>\n","import { ValidateService } from './../../service/validate.service';\nimport { AuthService } from './../../service/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(\n    public validateService: ValidateService,\n    public authService: AuthService,\n    public router: Router\n  ) {}\n\n  ngOnInit(): void {}\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password,\n    };\n\n    if (!this.validateService.ValidateRegister(user)) {\n      console.log('plesae complete all fields');\n    } else {\n      if (!this.validateService.ValideEmail(this.email)) {\n        console.log('email is not valid');\n      } else {\n        this.authService.registerUser(user).subscribe((data) => {\n          if (data.success) {\n            this.router.navigate(['/login']);\n          } else {\n            this.router.navigate(['/register']);\n          }\n        });\n      }\n    }\n  }\n}\n","<h2 class=\"display-3\">Register</h2>\n\n<form (submit)=\"onRegisterSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"name\">Name</label>\n    <input type=\"text\" name=\"name\" [(ngModel)]=\"name\" class=\"form-control\" />\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input\n      type=\"text\"\n      name=\"username\"\n      [(ngModel)]=\"username\"\n      class=\"form-control\"\n    />\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"email\">Email</label>\n    <input type=\"email\" name=\"email\" [(ngModel)]=\"email\" class=\"form-control\" />\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input\n      type=\"password\"\n      name=\"password\"\n      [(ngModel)]=\"password\"\n      class=\"form-control\"\n    />\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-block\">SUBMIT</button>\n</form>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpClientModule,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-type': 'Application/json',\n  }),\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(public http: HttpClient) {}\n\n  registerUser(user): Observable<any> {\n    return this.http.post<any>(\n      'http://localhost:3000/users/register',\n      user,\n      httpOptions\n    );\n  }\n\n  loginUser(user): Observable<any> {\n    return this.http.post<any>(\n      'http://localhost:3000/users/login',\n      user,\n      httpOptions\n    );\n  }\n\n  StoreUserData(token, user) {\n    localStorage.setItem('TOKEN', token);\n    this.authToken = token;\n    localStorage.setItem('USER', JSON.stringify(user));\n    this.user = user;\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  getProfile(): Observable<any> {\n    let auth_token = localStorage.getItem('TOKEN');\n    const httpOptions1 = {\n      headers: new HttpHeaders({\n        'Content-type': 'Application/json',\n        Authorization: auth_token,\n      }),\n    };\n\n    return this.http.get<any>(\n      'http://localhost:3000/users/profile',\n      httpOptions1\n    );\n  }\n}\n\ninterface User {\n  name: string;\n  username: String;\n  email: String;\n  password: String;\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ValidateService {\n  constructor() {}\n\n  ValidateRegister(user) {\n    if (\n      user.name == undefined ||\n      user.username == undefined ||\n      user.email == undefined ||\n      user.password == undefined\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  ValideEmail(email) {\n    const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}